{"ast":null,"code":"import { memoizeFunction } from '../../Utilities';\nimport { HighContrastSelector, getFocusStyle, hiddenContentStyle } from '../../Styling';\nvar noOutline = {\n  outline: 0\n};\n\nvar iconStyle = function (fontSize) {\n  return {\n    fontSize: fontSize,\n    margin: '0 4px',\n    height: '16px',\n    lineHeight: '16px',\n    textAlign: 'center',\n    flexShrink: 0\n  };\n};\n/**\n * Gets the base button styles. Note: because it is a base class to be used with the `mergeRules`\n * helper, it should have values for all class names in the interface. This let `mergeRules` optimize\n * mixing class names together.\n */\n\n\nexport var getStyles = memoizeFunction(function (theme) {\n  var _a;\n\n  var semanticColors = theme.semanticColors,\n      effects = theme.effects,\n      fonts = theme.fonts;\n  var border = semanticColors.buttonBorder;\n  var disabledBackground = semanticColors.disabledBackground;\n  var disabledText = semanticColors.disabledText;\n  var buttonHighContrastFocus = {\n    left: -2,\n    top: -2,\n    bottom: -2,\n    right: -2,\n    border: 'none',\n    outlineColor: 'ButtonText'\n  };\n  return {\n    root: [getFocusStyle(theme, {\n      inset: 1,\n      highContrastStyle: buttonHighContrastFocus,\n      borderColor: 'transparent'\n    }), theme.fonts.medium, {\n      boxSizing: 'border-box',\n      border: '1px solid ' + border,\n      userSelect: 'none',\n      display: 'inline-block',\n      textDecoration: 'none',\n      textAlign: 'center',\n      cursor: 'pointer',\n      padding: '0 16px',\n      borderRadius: effects.roundedCorner2,\n      selectors: {\n        // IE11 workaround for preventing shift of child elements of a button when active.\n        ':active > *': {\n          position: 'relative',\n          left: 0,\n          top: 0\n        }\n      }\n    }],\n    rootDisabled: [getFocusStyle(theme, {\n      inset: 1,\n      highContrastStyle: buttonHighContrastFocus,\n      borderColor: 'transparent'\n    }), {\n      backgroundColor: disabledBackground,\n      borderColor: disabledBackground,\n      color: disabledText,\n      cursor: 'default',\n      pointerEvents: 'none',\n      selectors: (_a = {\n        ':hover': noOutline,\n        ':focus': noOutline\n      }, _a[HighContrastSelector] = {\n        color: 'grayText',\n        borderColor: 'grayText'\n      }, _a)\n    }],\n    iconDisabled: {\n      color: disabledText\n    },\n    menuIconDisabled: {\n      color: disabledText\n    },\n    flexContainer: {\n      display: 'flex',\n      height: '100%',\n      flexWrap: 'nowrap',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    description: {\n      display: 'block'\n    },\n    textContainer: {\n      flexGrow: 1,\n      display: 'block'\n    },\n    icon: iconStyle(fonts.mediumPlus.fontSize),\n    menuIcon: iconStyle(fonts.small.fontSize),\n    label: {\n      margin: '0 4px',\n      lineHeight: '100%',\n      display: 'block'\n    },\n    screenReaderText: hiddenContentStyle\n  };\n});","map":{"version":3,"sources":["components/Button/BaseButton.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import { IButtonStyles } from './Button.types';\nimport { memoizeFunction } from '../../Utilities';\nimport { HighContrastSelector, ITheme, IRawStyle, getFocusStyle, hiddenContentStyle } from '../../Styling';\n\nconst noOutline: IRawStyle = {\n  outline: 0,\n};\n\nconst iconStyle = (fontSize?: string | number): IRawStyle => {\n  return {\n    fontSize: fontSize,\n    margin: '0 4px',\n    height: '16px',\n    lineHeight: '16px',\n    textAlign: 'center',\n    flexShrink: 0,\n  };\n};\n\n/**\n * Gets the base button styles. Note: because it is a base class to be used with the `mergeRules`\n * helper, it should have values for all class names in the interface. This let `mergeRules` optimize\n * mixing class names together.\n */\nexport const getStyles = memoizeFunction(\n  (theme: ITheme): IButtonStyles => {\n    const { semanticColors, effects, fonts } = theme;\n\n    const border = semanticColors.buttonBorder;\n    const disabledBackground = semanticColors.disabledBackground;\n    const disabledText = semanticColors.disabledText;\n    const buttonHighContrastFocus = {\n      left: -2,\n      top: -2,\n      bottom: -2,\n      right: -2,\n      border: 'none',\n      outlineColor: 'ButtonText',\n    };\n\n    return {\n      root: [\n        getFocusStyle(theme, { inset: 1, highContrastStyle: buttonHighContrastFocus, borderColor: 'transparent' }),\n        theme.fonts.medium,\n        {\n          boxSizing: 'border-box',\n          border: '1px solid ' + border,\n          userSelect: 'none',\n          display: 'inline-block',\n          textDecoration: 'none',\n          textAlign: 'center',\n          cursor: 'pointer',\n          padding: '0 16px',\n          borderRadius: effects.roundedCorner2,\n\n          selectors: {\n            // IE11 workaround for preventing shift of child elements of a button when active.\n            ':active > *': {\n              position: 'relative',\n              left: 0,\n              top: 0,\n            },\n          },\n        },\n      ],\n\n      rootDisabled: [\n        getFocusStyle(theme, { inset: 1, highContrastStyle: buttonHighContrastFocus, borderColor: 'transparent' }),\n        {\n          backgroundColor: disabledBackground,\n          borderColor: disabledBackground,\n          color: disabledText,\n          cursor: 'default',\n          pointerEvents: 'none',\n          selectors: {\n            ':hover': noOutline,\n            ':focus': noOutline,\n            [HighContrastSelector]: {\n              color: 'grayText',\n              borderColor: 'grayText',\n            },\n          },\n        },\n      ],\n\n      iconDisabled: {\n        color: disabledText,\n      },\n\n      menuIconDisabled: {\n        color: disabledText,\n      },\n\n      flexContainer: {\n        display: 'flex',\n        height: '100%',\n        flexWrap: 'nowrap',\n        justifyContent: 'center',\n        alignItems: 'center',\n      },\n      description: {\n        display: 'block',\n      },\n\n      textContainer: {\n        flexGrow: 1,\n        display: 'block',\n      },\n\n      icon: iconStyle(fonts.mediumPlus.fontSize),\n\n      menuIcon: iconStyle(fonts.small.fontSize),\n\n      label: {\n        margin: '0 4px',\n        lineHeight: '100%',\n        display: 'block',\n      },\n\n      screenReaderText: hiddenContentStyle,\n    };\n  },\n);\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}