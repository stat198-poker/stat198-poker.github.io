{"ast":null,"code":"// Fallback fonts, if specified system or web fonts are unavailable.\nvar FontFamilyFallbacks = \"'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif\"; // Font face names to be registered.\n\nexport var LocalizedFontNames;\n\n(function (LocalizedFontNames) {\n  LocalizedFontNames.Arabic = 'Segoe UI Web (Arabic)';\n  LocalizedFontNames.Cyrillic = 'Segoe UI Web (Cyrillic)';\n  LocalizedFontNames.EastEuropean = 'Segoe UI Web (East European)';\n  LocalizedFontNames.Greek = 'Segoe UI Web (Greek)';\n  LocalizedFontNames.Hebrew = 'Segoe UI Web (Hebrew)';\n  LocalizedFontNames.Thai = 'Leelawadee UI Web';\n  LocalizedFontNames.Vietnamese = 'Segoe UI Web (Vietnamese)';\n  LocalizedFontNames.WestEuropean = 'Segoe UI Web (West European)';\n  LocalizedFontNames.Selawik = 'Selawik Web';\n  LocalizedFontNames.Armenian = 'Segoe UI Web (Armenian)';\n  LocalizedFontNames.Georgian = 'Segoe UI Web (Georgian)';\n})(LocalizedFontNames || (LocalizedFontNames = {})); // Font families with fallbacks, for the general regions.\n\n\nexport var LocalizedFontFamilies;\n\n(function (LocalizedFontFamilies) {\n  LocalizedFontFamilies.Arabic = \"'\" + LocalizedFontNames.Arabic + \"'\";\n  LocalizedFontFamilies.ChineseSimplified = \"'Microsoft Yahei UI', Verdana, Simsun\";\n  LocalizedFontFamilies.ChineseTraditional = \"'Microsoft Jhenghei UI', Pmingliu\";\n  LocalizedFontFamilies.Cyrillic = \"'\" + LocalizedFontNames.Cyrillic + \"'\";\n  LocalizedFontFamilies.EastEuropean = \"'\" + LocalizedFontNames.EastEuropean + \"'\";\n  LocalizedFontFamilies.Greek = \"'\" + LocalizedFontNames.Greek + \"'\";\n  LocalizedFontFamilies.Hebrew = \"'\" + LocalizedFontNames.Hebrew + \"'\";\n  LocalizedFontFamilies.Hindi = \"'Nirmala UI'\";\n  LocalizedFontFamilies.Japanese = \"'Yu Gothic UI', 'Meiryo UI', Meiryo, 'MS Pgothic', Osaka\";\n  LocalizedFontFamilies.Korean = \"'Malgun Gothic', Gulim\";\n  LocalizedFontFamilies.Selawik = \"'\" + LocalizedFontNames.Selawik + \"'\";\n  LocalizedFontFamilies.Thai = \"'Leelawadee UI Web', 'Kmer UI'\";\n  LocalizedFontFamilies.Vietnamese = \"'\" + LocalizedFontNames.Vietnamese + \"'\";\n  LocalizedFontFamilies.WestEuropean = \"'\" + LocalizedFontNames.WestEuropean + \"'\";\n  LocalizedFontFamilies.Armenian = \"'\" + LocalizedFontNames.Armenian + \"'\";\n  LocalizedFontFamilies.Georgian = \"'\" + LocalizedFontNames.Georgian + \"'\";\n})(LocalizedFontFamilies || (LocalizedFontFamilies = {})); // By default, we favor system fonts for the default.\n// All localized fonts use a web font and never use the system font.\n\n\nvar defaultFontFamily = \"'Segoe UI', '\" + LocalizedFontNames.WestEuropean + \"'\"; // Mapping of language prefix to to font family.\n\nvar LanguageToFontMap = {\n  ar: LocalizedFontFamilies.Arabic,\n  bg: LocalizedFontFamilies.Cyrillic,\n  cs: LocalizedFontFamilies.EastEuropean,\n  el: LocalizedFontFamilies.Greek,\n  et: LocalizedFontFamilies.EastEuropean,\n  he: LocalizedFontFamilies.Hebrew,\n  hi: LocalizedFontFamilies.Hindi,\n  hr: LocalizedFontFamilies.EastEuropean,\n  hu: LocalizedFontFamilies.EastEuropean,\n  ja: LocalizedFontFamilies.Japanese,\n  kk: LocalizedFontFamilies.EastEuropean,\n  ko: LocalizedFontFamilies.Korean,\n  lt: LocalizedFontFamilies.EastEuropean,\n  lv: LocalizedFontFamilies.EastEuropean,\n  pl: LocalizedFontFamilies.EastEuropean,\n  ru: LocalizedFontFamilies.Cyrillic,\n  sk: LocalizedFontFamilies.EastEuropean,\n  'sr-latn': LocalizedFontFamilies.EastEuropean,\n  th: LocalizedFontFamilies.Thai,\n  tr: LocalizedFontFamilies.EastEuropean,\n  uk: LocalizedFontFamilies.Cyrillic,\n  vi: LocalizedFontFamilies.Vietnamese,\n  'zh-hans': LocalizedFontFamilies.ChineseSimplified,\n  'zh-hant': LocalizedFontFamilies.ChineseTraditional,\n  hy: LocalizedFontFamilies.Armenian,\n  ka: LocalizedFontFamilies.Georgian\n}; // Standard font sizes.\n\nexport var FontSizes;\n\n(function (FontSizes) {\n  FontSizes.mini = '10px';\n  FontSizes.xSmall = '10px';\n  FontSizes.small = '12px';\n  FontSizes.smallPlus = '12px';\n  FontSizes.medium = '14px';\n  FontSizes.mediumPlus = '16px';\n  FontSizes.icon = '16px';\n  FontSizes.large = '18px';\n  FontSizes.xLarge = '20px';\n  FontSizes.xLargePlus = '24px';\n  FontSizes.xxLarge = '28px';\n  FontSizes.xxLargePlus = '32px';\n  FontSizes.superLarge = '42px';\n  FontSizes.mega = '68px';\n})(FontSizes || (FontSizes = {})); // Standard font weights.\n\n\nexport var FontWeights;\n\n(function (FontWeights) {\n  FontWeights.light = 100;\n  FontWeights.semilight = 300;\n  FontWeights.regular = 400;\n  FontWeights.semibold = 600;\n  FontWeights.bold = 700;\n})(FontWeights || (FontWeights = {})); // Standard Icon Sizes.\n\n\nexport var IconFontSizes;\n\n(function (IconFontSizes) {\n  IconFontSizes.xSmall = '10px';\n  IconFontSizes.small = '12px';\n  IconFontSizes.medium = '16px';\n  IconFontSizes.large = '20px';\n})(IconFontSizes || (IconFontSizes = {}));\n\nfunction _fontFamilyWithFallbacks(fontFamily) {\n  return fontFamily + \", \" + FontFamilyFallbacks;\n}\n\nexport function createFontStyles(localeCode) {\n  var localizedFont = _getLocalizedFontFamily(localeCode);\n\n  var fontFamilyWithFallback = _fontFamilyWithFallbacks(localizedFont);\n\n  var fontStyles = {\n    tiny: _createFont(FontSizes.mini, FontWeights.regular, fontFamilyWithFallback),\n    xSmall: _createFont(FontSizes.xSmall, FontWeights.regular, fontFamilyWithFallback),\n    small: _createFont(FontSizes.small, FontWeights.regular, fontFamilyWithFallback),\n    smallPlus: _createFont(FontSizes.smallPlus, FontWeights.regular, fontFamilyWithFallback),\n    medium: _createFont(FontSizes.medium, FontWeights.regular, fontFamilyWithFallback),\n    mediumPlus: _createFont(FontSizes.mediumPlus, FontWeights.regular, fontFamilyWithFallback),\n    large: _createFont(FontSizes.large, FontWeights.regular, fontFamilyWithFallback),\n    xLarge: _createFont(FontSizes.xLarge, FontWeights.semibold, fontFamilyWithFallback),\n    xLargePlus: _createFont(FontSizes.xLargePlus, FontWeights.semibold, fontFamilyWithFallback),\n    xxLarge: _createFont(FontSizes.xxLarge, FontWeights.semibold, fontFamilyWithFallback),\n    xxLargePlus: _createFont(FontSizes.xxLargePlus, FontWeights.semibold, fontFamilyWithFallback),\n    superLarge: _createFont(FontSizes.superLarge, FontWeights.semibold, fontFamilyWithFallback),\n    mega: _createFont(FontSizes.mega, FontWeights.semibold, fontFamilyWithFallback)\n  };\n  return fontStyles;\n}\n/**\n * If there is a localized font for this language, return that.\n * Returns undefined if there is no localized font for that language.\n */\n\nfunction _getLocalizedFontFamily(language) {\n  for (var lang in LanguageToFontMap) {\n    if (LanguageToFontMap.hasOwnProperty(lang) && language && lang.indexOf(language) === 0) {\n      // tslint:disable-next-line:no-any\n      return LanguageToFontMap[lang];\n    }\n  }\n\n  return defaultFontFamily;\n}\n\nfunction _createFont(size, weight, fontFamily) {\n  return {\n    fontFamily: fontFamily,\n    MozOsxFontSmoothing: 'grayscale',\n    WebkitFontSmoothing: 'antialiased',\n    fontSize: size,\n    fontWeight: weight\n  };\n}","map":{"version":3,"sources":["styles/fonts.ts"],"names":[],"mappings":"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","sourcesContent":["import { IRawStyle, IFontWeight } from '@uifabric/merge-styles';\nimport { IFontStyles } from '../interfaces/index';\n\n// Fallback fonts, if specified system or web fonts are unavailable.\nconst FontFamilyFallbacks = `'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif`;\n\n// Font face names to be registered.\nexport namespace LocalizedFontNames {\n  export const Arabic = 'Segoe UI Web (Arabic)';\n  export const Cyrillic = 'Segoe UI Web (Cyrillic)';\n  export const EastEuropean = 'Segoe UI Web (East European)';\n  export const Greek = 'Segoe UI Web (Greek)';\n  export const Hebrew = 'Segoe UI Web (Hebrew)';\n  export const Thai = 'Leelawadee UI Web';\n  export const Vietnamese = 'Segoe UI Web (Vietnamese)';\n  export const WestEuropean = 'Segoe UI Web (West European)';\n  export const Selawik = 'Selawik Web';\n  export const Armenian = 'Segoe UI Web (Armenian)';\n  export const Georgian = 'Segoe UI Web (Georgian)';\n}\n\n// Font families with fallbacks, for the general regions.\nexport namespace LocalizedFontFamilies {\n  export const Arabic = `'${LocalizedFontNames.Arabic}'`;\n  export const ChineseSimplified = `'Microsoft Yahei UI', Verdana, Simsun`;\n  export const ChineseTraditional = `'Microsoft Jhenghei UI', Pmingliu`;\n  export const Cyrillic = `'${LocalizedFontNames.Cyrillic}'`;\n  export const EastEuropean = `'${LocalizedFontNames.EastEuropean}'`;\n  export const Greek = `'${LocalizedFontNames.Greek}'`;\n  export const Hebrew = `'${LocalizedFontNames.Hebrew}'`;\n  export const Hindi = `'Nirmala UI'`;\n  export const Japanese = `'Yu Gothic UI', 'Meiryo UI', Meiryo, 'MS Pgothic', Osaka`;\n  export const Korean = `'Malgun Gothic', Gulim`;\n  export const Selawik = `'${LocalizedFontNames.Selawik}'`;\n  export const Thai = `'Leelawadee UI Web', 'Kmer UI'`;\n  export const Vietnamese = `'${LocalizedFontNames.Vietnamese}'`;\n  export const WestEuropean = `'${LocalizedFontNames.WestEuropean}'`;\n  export const Armenian = `'${LocalizedFontNames.Armenian}'`;\n  export const Georgian = `'${LocalizedFontNames.Georgian}'`;\n}\n\n// By default, we favor system fonts for the default.\n// All localized fonts use a web font and never use the system font.\nconst defaultFontFamily = `'Segoe UI', '${LocalizedFontNames.WestEuropean}'`;\n\n// Mapping of language prefix to to font family.\nconst LanguageToFontMap = {\n  ar: LocalizedFontFamilies.Arabic,\n  bg: LocalizedFontFamilies.Cyrillic,\n  cs: LocalizedFontFamilies.EastEuropean,\n  el: LocalizedFontFamilies.Greek,\n  et: LocalizedFontFamilies.EastEuropean,\n  he: LocalizedFontFamilies.Hebrew,\n  hi: LocalizedFontFamilies.Hindi,\n  hr: LocalizedFontFamilies.EastEuropean,\n  hu: LocalizedFontFamilies.EastEuropean,\n  ja: LocalizedFontFamilies.Japanese,\n  kk: LocalizedFontFamilies.EastEuropean,\n  ko: LocalizedFontFamilies.Korean,\n  lt: LocalizedFontFamilies.EastEuropean,\n  lv: LocalizedFontFamilies.EastEuropean,\n  pl: LocalizedFontFamilies.EastEuropean,\n  ru: LocalizedFontFamilies.Cyrillic,\n  sk: LocalizedFontFamilies.EastEuropean,\n  'sr-latn': LocalizedFontFamilies.EastEuropean,\n  th: LocalizedFontFamilies.Thai,\n  tr: LocalizedFontFamilies.EastEuropean,\n  uk: LocalizedFontFamilies.Cyrillic,\n  vi: LocalizedFontFamilies.Vietnamese,\n  'zh-hans': LocalizedFontFamilies.ChineseSimplified,\n  'zh-hant': LocalizedFontFamilies.ChineseTraditional,\n  hy: LocalizedFontFamilies.Armenian,\n  ka: LocalizedFontFamilies.Georgian,\n};\n\n// Standard font sizes.\nexport namespace FontSizes {\n  export const mini: string = '10px';\n  export const xSmall: string = '10px';\n  export const small: string = '12px';\n  export const smallPlus: string = '12px';\n  export const medium: string = '14px';\n  export const mediumPlus: string = '16px';\n  export const icon: string = '16px';\n  export const large: string = '18px';\n  export const xLarge: string = '20px';\n  export const xLargePlus: string = '24px';\n  export const xxLarge: string = '28px';\n  export const xxLargePlus: string = '32px';\n  export const superLarge: string = '42px';\n  export const mega: string = '68px';\n}\n\n// Standard font weights.\nexport namespace FontWeights {\n  export const light: IFontWeight = 100;\n  export const semilight: IFontWeight = 300;\n  export const regular: IFontWeight = 400;\n  export const semibold: IFontWeight = 600;\n  export const bold: IFontWeight = 700;\n}\n\n// Standard Icon Sizes.\nexport namespace IconFontSizes {\n  export const xSmall: string = '10px';\n  export const small: string = '12px';\n  export const medium: string = '16px';\n  export const large: string = '20px';\n}\n\nfunction _fontFamilyWithFallbacks(fontFamily: string): string {\n  return `${fontFamily}, ${FontFamilyFallbacks}`;\n}\n\nexport function createFontStyles(localeCode: string | null): IFontStyles {\n  const localizedFont = _getLocalizedFontFamily(localeCode);\n  let fontFamilyWithFallback = _fontFamilyWithFallbacks(localizedFont);\n\n  const fontStyles = {\n    tiny: _createFont(FontSizes.mini, FontWeights.regular, fontFamilyWithFallback),\n    xSmall: _createFont(FontSizes.xSmall, FontWeights.regular, fontFamilyWithFallback),\n    small: _createFont(FontSizes.small, FontWeights.regular, fontFamilyWithFallback),\n    smallPlus: _createFont(FontSizes.smallPlus, FontWeights.regular, fontFamilyWithFallback),\n    medium: _createFont(FontSizes.medium, FontWeights.regular, fontFamilyWithFallback),\n    mediumPlus: _createFont(FontSizes.mediumPlus, FontWeights.regular, fontFamilyWithFallback),\n    large: _createFont(FontSizes.large, FontWeights.regular, fontFamilyWithFallback),\n    xLarge: _createFont(FontSizes.xLarge, FontWeights.semibold, fontFamilyWithFallback),\n    xLargePlus: _createFont(FontSizes.xLargePlus, FontWeights.semibold, fontFamilyWithFallback),\n    xxLarge: _createFont(FontSizes.xxLarge, FontWeights.semibold, fontFamilyWithFallback),\n    xxLargePlus: _createFont(FontSizes.xxLargePlus, FontWeights.semibold, fontFamilyWithFallback),\n    superLarge: _createFont(FontSizes.superLarge, FontWeights.semibold, fontFamilyWithFallback),\n    mega: _createFont(FontSizes.mega, FontWeights.semibold, fontFamilyWithFallback),\n  };\n\n  return fontStyles;\n}\n\n/**\n * If there is a localized font for this language, return that.\n * Returns undefined if there is no localized font for that language.\n */\nfunction _getLocalizedFontFamily(language: string | null): string {\n  for (let lang in LanguageToFontMap) {\n    if (LanguageToFontMap.hasOwnProperty(lang) && language && lang.indexOf(language) === 0) {\n      // tslint:disable-next-line:no-any\n      return (LanguageToFontMap as any)[lang];\n    }\n  }\n\n  return defaultFontFamily;\n}\n\nfunction _createFont(size: string, weight: IFontWeight, fontFamily: string): IRawStyle {\n  return {\n    fontFamily: fontFamily,\n    MozOsxFontSmoothing: 'grayscale',\n    WebkitFontSmoothing: 'antialiased',\n    fontSize: size,\n    fontWeight: weight,\n  };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}