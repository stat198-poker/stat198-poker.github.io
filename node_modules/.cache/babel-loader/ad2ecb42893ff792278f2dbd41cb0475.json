{"ast":null,"code":"import React from'react';import{Link}from'react-router-dom';import Button from'./../../components/Button.js';import TransparentButton from'./../../components/TransparentButton.js';import'./Spotify.css';import genres from\"./../../assets/spotify-demos/genres.png\";import popularity from\"./../../assets/spotify-demos/popularity.png\";import rhizomeROC from\"./../../assets/spotify-demos/rhizome_roc.png\";function Spotify(){return/*#__PURE__*/React.createElement(\"div\",{class:\"spotify\"},/*#__PURE__*/React.createElement(\"div\",{className:\"backbutton\"},/*#__PURE__*/React.createElement(Button,{link:\"/software\",text:\"Back\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"navigation-menu\"},/*#__PURE__*/React.createElement(TransparentButton,{link:\"/spotify#overview\",text:\"Overview\"}),/*#__PURE__*/React.createElement(TransparentButton,{link:\"/spotify#exploration\",text:\"Exploration\"}),/*#__PURE__*/React.createElement(TransparentButton,{link:\"/spotify#model\",text:\"Modeling\"})),/*#__PURE__*/React.createElement(\"div\",{class:\"text-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"page-spacer\"}),/*#__PURE__*/React.createElement(\"a\",{name:\"overview\"},/*#__PURE__*/React.createElement(\"div\",{class:\"big-text\"},\"Spotify API\")),/*#__PURE__*/React.createElement(\"div\",{className:\"medium-text\"},\"Overview\"),/*#__PURE__*/React.createElement(\"div\",{className:\"small-text\"},\"I've been playing piano since the age of four, singing (perhaps out-of-tune) since the age of six, and listening to Spotify at least an hour a day since I first got a Premium account in college.\"),/*#__PURE__*/React.createElement(\"div\",{className:\"small-text\"},\"I discovered the Spotify API after researching a little bit about Spotify Wrapped and decided I wanted to do more research about my personal listening habits!\"),/*#__PURE__*/React.createElement(\"div\",{className:\"small-text\"},\"This page will dive into the projects that I was able to create using the API:\",/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",null,\"Did exploratory data analysis to find my favorite genres and artists\"),/*#__PURE__*/React.createElement(\"li\",null,\"Trained a linear regression model to predict whether I'd like a song\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"small-text\"},\"I used Jupyter Notebook, pandas, matplotlib, requests, seaborn, numpy, and scikit-learn for this project.\"),/*#__PURE__*/React.createElement(\"a\",{name:\"exploration\"},/*#__PURE__*/React.createElement(\"div\",{className:\"spacer\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"medium-text\"},\"Exploration\"),/*#__PURE__*/React.createElement(\"div\",{className:\"small-text\"},\"I first explored which genres I listened to the most by aggregating each genres' appearance in the list of genres corresponding to my top 20 artists.\"),/*#__PURE__*/React.createElement(\"img\",{className:\"image\",src:genres}),/*#__PURE__*/React.createElement(\"div\",{className:\"small-text\"},\"I noticed that the API returns a feature called \\\"popularity\\\" for each artist, and have always been a little curious about whether the music I listen to is mainstream. To find out, I graphed the correlation between artist ranking and popularity:\"),/*#__PURE__*/React.createElement(\"img\",{className:\"image\",src:popularity}),/*#__PURE__*/React.createElement(\"div\",{className:\"small-text\"},\"With an r-value of -0.44945735259442465, I'd say there is definitely a chance that this could be true. A negative r-value of this magnitude could imply that my more popular artists have higher popularity scores-- a.k.a. a negative correlation between personal preference and artist popularity.\"),/*#__PURE__*/React.createElement(\"a\",{name:\"model\"},/*#__PURE__*/React.createElement(\"div\",{className:\"spacer\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"medium-text\"},\"Logistic Regression Model\"),/*#__PURE__*/React.createElement(\"div\",{className:\"small-text\"},\"I personally have had a variety of hit-and-misses with Spotify's recommendations algorithm. When I saw that the API could return certain features of song tracks, I wanted to see if I could build myself a personalized recommendations algorithm using these features and the information that I know about my personal preferences.\"),/*#__PURE__*/React.createElement(\"div\",{className:\"small-text\"},\"The features for each track returned by the API include:\",/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",null,\"acousticness\"),/*#__PURE__*/React.createElement(\"li\",null,\"danceability\"),/*#__PURE__*/React.createElement(\"li\",null,\"energy\"),/*#__PURE__*/React.createElement(\"li\",null,\"instrumentalness\"),/*#__PURE__*/React.createElement(\"li\",null,\"key\"),/*#__PURE__*/React.createElement(\"li\",null,\"liveness\"),/*#__PURE__*/React.createElement(\"li\",null,\"loudness\"),/*#__PURE__*/React.createElement(\"li\",null,\"speechiness\"),/*#__PURE__*/React.createElement(\"li\",null,\"tempo\"),/*#__PURE__*/React.createElement(\"li\",null,\"time signature\"),/*#__PURE__*/React.createElement(\"li\",null,\"valence\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"small-text\"},\"Using the API, I pulled 552 songs from my own playlists and my friends' playlists and added a 0 (dislike) and 1 (like) label to each song. I cleaned the data and prepared it for training, including changes such as:\",/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",null,\"one-hot-encoding the \\\"key\\\" column\"),/*#__PURE__*/React.createElement(\"li\",null,\"filling null values\"),/*#__PURE__*/React.createElement(\"li\",null,\"removing time signature as a feature after realizing most values were missing or redundant (i.e. all 4's) or incorrect (i.e. 0)\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"small-text\"},\"Afterwards I did a 9:1 split of the data and trained a Logistic Regression model on the data using scikit-learn. With just these basic features, the model reached:\",/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",null,\"Training accuracy of 78.47%\"),/*#__PURE__*/React.createElement(\"li\",null,\"Validation accuracy of 71.43%\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"small-text\"},\"Plotting the ROC curve of the model reveals:\"),/*#__PURE__*/React.createElement(\"img\",{className:\"image\",src:rhizomeROC}),/*#__PURE__*/React.createElement(\"div\",{className:\"small-text\"},\"I also wanted to test how well the model responds to new data, so I created a completely new playlist of 40 songs I've never listened to before and had the model predict 0-1 labels of preference. I listened to the songs and manually labeled them, and then calculated the model's accuracy to be 65%.\"),/*#__PURE__*/React.createElement(\"div\",{className:\"small-text\"},\"This wasn't as stastically significant as I wanted it to be (p=0.04). Some ideas I have moving forward in the next iteration of this model are to add:\",/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",null,\"Add genre as a feature\"),/*#__PURE__*/React.createElement(\"li\",null,\"Add artist name as a feature\"),/*#__PURE__*/React.createElement(\"li\",null,\"Add album name as a feature\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"page-spacer\"})));}export default Spotify;","map":{"version":3,"sources":["/Users/mac/Desktop/projects/izzielau.github.io/src/views/spotify/Spotify.js"],"names":["React","Link","Button","TransparentButton","genres","popularity","rhizomeROC","Spotify"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,KAAqB,kBAArB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,8BAAnB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,yCAA9B,CAEA,MAAO,eAAP,CACA,MAAOC,CAAAA,MAAP,KAAmB,yCAAnB,CACA,MAAOC,CAAAA,UAAP,KAAuB,6CAAvB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8CAAvB,CAEA,QAASC,CAAAA,OAAT,EAAmB,CACjB,mBACI,2BAAK,KAAK,CAAC,SAAX,eACQ,2BAAK,SAAS,CAAC,YAAf,eACI,oBAAC,MAAD,EAAQ,IAAI,CAAC,WAAb,CAAyB,IAAI,CAAC,MAA9B,EADJ,CADR,cAIQ,2BAAK,SAAS,CAAC,iBAAf,eACI,oBAAC,iBAAD,EAAmB,IAAI,CAAC,mBAAxB,CAA4C,IAAI,CAAC,UAAjD,EADJ,cAEI,oBAAC,iBAAD,EAAmB,IAAI,CAAC,sBAAxB,CAA+C,IAAI,CAAC,aAApD,EAFJ,cAGI,oBAAC,iBAAD,EAAmB,IAAI,CAAC,gBAAxB,CAAyC,IAAI,CAAC,UAA9C,EAHJ,CAJR,cASQ,2BAAK,KAAK,CAAC,gBAAX,eACI,2BAAK,SAAS,CAAC,aAAf,EADJ,cAGI,yBAAG,IAAI,CAAC,UAAR,eACI,2BAAK,KAAK,CAAC,UAAX,gBADJ,CAHJ,cAQI,2BAAK,SAAS,CAAC,aAAf,aARJ,cAWI,2BAAK,SAAS,CAAC,YAAf,uMAXJ,cAeI,2BAAK,SAAS,CAAC,YAAf,mKAfJ,cAmBI,2BAAK,SAAS,CAAC,YAAf,gGAEI,2CACI,qGADJ,cAEI,qGAFJ,CAFJ,CAnBJ,cA0BI,2BAAK,SAAS,CAAC,YAAf,8GA1BJ,cA8BI,yBAAG,IAAI,CAAC,aAAR,eACI,2BAAK,SAAS,CAAC,QAAf,EADJ,CA9BJ,cAiCI,2BAAK,SAAS,CAAC,aAAf,gBAjCJ,cAoCI,2BAAK,SAAS,CAAC,YAAf,0JApCJ,cAwCI,2BAAK,SAAS,CAAC,OAAf,CAAuB,GAAG,CAAEH,MAA5B,EAxCJ,cAyCI,2BAAK,SAAS,CAAC,YAAf,2PAzCJ,cA8CI,2BAAK,SAAS,CAAC,OAAf,CAAuB,GAAG,CAAEC,UAA5B,EA9CJ,cA+CI,2BAAK,SAAS,CAAC,YAAf,0SA/CJ,cAqDI,yBAAG,IAAI,CAAC,OAAR,eACI,2BAAK,SAAS,CAAC,QAAf,EADJ,CArDJ,cAwDI,2BAAK,SAAS,CAAC,aAAf,8BAxDJ,cA2DI,2BAAK,SAAS,CAAC,YAAf,2UA3DJ,cAgEI,2BAAK,SAAS,CAAC,YAAf,0EAEI,2CACI,6CADJ,cAEI,6CAFJ,cAGI,uCAHJ,cAII,iDAJJ,cAKI,oCALJ,cAMI,yCANJ,cAOI,yCAPJ,cAQI,4CARJ,cASI,sCATJ,cAUI,+CAVJ,cAWI,wCAXJ,CAFJ,CAhEJ,cAgFI,2BAAK,SAAS,CAAC,YAAf,wOAGI,2CACI,oEADJ,cAEI,oDAFJ,cAGI,gKAHJ,CAHJ,CAhFJ,cA0FI,2BAAK,SAAS,CAAC,YAAf,qLAGI,2CACI,4DADJ,cAEI,8DAFJ,CAHJ,CA1FJ,cAkGI,2BAAK,SAAS,CAAC,YAAf,iDAlGJ,cAqGI,2BAAK,SAAS,CAAC,OAAf,CAAuB,GAAG,CAAEC,UAA5B,EArGJ,cAsGI,2BAAK,SAAS,CAAC,YAAf,+SAtGJ,cA2GI,2BAAK,SAAS,CAAC,YAAf,wKAGI,2CACI,uDADJ,cAEI,6DAFJ,cAGI,4DAHJ,CAHJ,CA3GJ,cAoHI,2BAAK,SAAS,CAAC,aAAf,EApHJ,CATR,CADJ,CAmRD,CAED,cAAeC,CAAAA,OAAf","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Button from './../../components/Button.js'\nimport TransparentButton from './../../components/TransparentButton.js'\n\nimport './Spotify.css';\nimport genres from \"./../../assets/spotify-demos/genres.png\"\nimport popularity from \"./../../assets/spotify-demos/popularity.png\"\nimport rhizomeROC from \"./../../assets/spotify-demos/rhizome_roc.png\"\n\nfunction Spotify() {\n  return (\n      <div class=\"spotify\">\n              <div className=\"backbutton\">\n                  <Button link=\"/software\" text=\"Back\"/>\n              </div>\n              <div className=\"navigation-menu\">\n                  <TransparentButton link=\"/spotify#overview\" text=\"Overview\"/>\n                  <TransparentButton link=\"/spotify#exploration\" text=\"Exploration\"/>\n                  <TransparentButton link=\"/spotify#model\" text=\"Modeling\"/>\n              </div>\n              <div class=\"text-container\">\n                  <div className=\"page-spacer\" />\n\n                  <a name=\"overview\">\n                      <div class=\"big-text\">\n                          Spotify API\n                      </div>\n                  </a>\n                  <div className=\"medium-text\">\n                      Overview\n                  </div>\n                  <div className=\"small-text\">\n                      I've been playing piano since the age of four, singing (perhaps out-of-tune) since the age of six, and\n                      listening to Spotify at least an hour a day since I first got a Premium account in college.\n                  </div>\n                  <div className=\"small-text\">\n                      I discovered the Spotify API after researching a little bit about Spotify Wrapped and decided I wanted\n                      to do more research about my personal listening habits!\n                  </div>\n                  <div className=\"small-text\">\n                      This page will dive into the projects that I was able to create using the API:\n                      <ul>\n                          <li>Did exploratory data analysis to find my favorite genres and artists</li>\n                          <li>Trained a linear regression model to predict whether I'd like a song</li>\n                      </ul>\n                  </div>\n                  <div className=\"small-text\">\n                      I used Jupyter Notebook, pandas, matplotlib, requests, seaborn, numpy, and scikit-learn for this project.\n                  </div>\n\n                  <a name=\"exploration\">\n                      <div className=\"spacer\" />\n                  </a>\n                  <div className=\"medium-text\">\n                      Exploration\n                  </div>\n                  <div className=\"small-text\">\n                      I first explored which genres I listened to the most by aggregating each genres' appearance in the list\n                      of genres corresponding to my top 20 artists.\n                  </div>\n                  <img className=\"image\" src={genres} />\n                  <div className=\"small-text\">\n                      I noticed that the API returns a feature called \"popularity\" for each artist, and have always been a little\n                      curious about whether the music I listen to is mainstream. To find out, I graphed the correlation between\n                      artist ranking and popularity:\n                  </div>\n                  <img className=\"image\" src={popularity} />\n                  <div className=\"small-text\">\n                      With an r-value of -0.44945735259442465, I'd say there is definitely a chance that this could be true. A\n                      negative r-value of this magnitude could imply that my more popular artists have higher popularity scores--\n                      a.k.a. a negative correlation between personal preference and artist popularity.\n                  </div>\n\n                  <a name=\"model\">\n                      <div className=\"spacer\" />\n                  </a>\n                  <div className=\"medium-text\">\n                      Logistic Regression Model\n                  </div>\n                  <div className=\"small-text\">\n                      I personally have had a variety of hit-and-misses with Spotify's recommendations algorithm. When I saw that\n                      the API could return certain features of song tracks, I wanted to see if I could build myself a personalized\n                      recommendations algorithm using these features and the information that I know about my personal preferences.\n                  </div>\n                  <div className=\"small-text\">\n                      The features for each track returned by the API include:\n                      <ul>\n                          <li>acousticness</li>\n                          <li>danceability</li>\n                          <li>energy</li>\n                          <li>instrumentalness</li>\n                          <li>key</li>\n                          <li>liveness</li>\n                          <li>loudness</li>\n                          <li>speechiness</li>\n                          <li>tempo</li>\n                          <li>time signature</li>\n                          <li>valence</li>\n                      </ul>\n                  </div>\n                  <div className=\"small-text\">\n                      Using the API, I pulled 552 songs from my own playlists and my friends' playlists and added a 0 (dislike)\n                      and 1 (like) label to each song. I cleaned the data and prepared it for training, including changes such as:\n                      <ul>\n                          <li>one-hot-encoding the \"key\" column</li>\n                          <li>filling null values</li>\n                          <li>removing time signature as a feature after realizing most values were missing or redundant (i.e.\n                              all 4's) or incorrect (i.e. 0)</li>\n                      </ul>\n                  </div>\n                  <div className=\"small-text\">\n                      Afterwards I did a 9:1 split of the data and trained a Logistic Regression model on the data using\n                      scikit-learn. With just these basic features, the model reached:\n                      <ul>\n                          <li>Training accuracy of 78.47%</li>\n                          <li>Validation accuracy of 71.43%</li>\n                      </ul>\n                  </div>\n                  <div className=\"small-text\">\n                      Plotting the ROC curve of the model reveals:\n                  </div>\n                  <img className=\"image\" src={rhizomeROC} />\n                  <div className=\"small-text\">\n                      I also wanted to test how well the model responds to new data, so I created a completely new playlist of\n                      40 songs I've never listened to before and had the model predict 0-1 labels of preference. I listened to the\n                      songs and manually labeled them, and then calculated the model's accuracy to be 65%.\n                  </div>\n                  <div className=\"small-text\">\n                      This wasn't as stastically significant as I wanted it to be (p=0.04). Some ideas I have moving forward in\n                      the next iteration of this model are to add:\n                      <ul>\n                          <li>Add genre as a feature</li>\n                          <li>Add artist name as a feature</li>\n                          <li>Add album name as a feature</li>\n                      </ul>\n                  </div>\n                  <div className=\"page-spacer\" />\n          </div>\n      {/*\n          <div className=\"backbutton\">\n              <BackButton link=\"/software\" text=\"back to projects\"/>\n          </div>\n          <div className=\"spotify\">\n              <div className=\"navigation-menu\">\n                  <a href=\"/spotify#overview\" style={{ textDecoration: 'none' }}>\n                      <div className=\"row\">\n                          <div class=\"text\">\n                            Overview\n                          </div>\n                      </div>\n                  </a>\n                  <a href=\"/spotify#exploration\" style={{ textDecoration: 'none' }}>\n                      <div className=\"row\">\n                          <div class=\"text\">\n                            Exploration\n                          </div>\n                      </div>\n                  </a>\n                  <a href=\"/spotify#model\" style={{ textDecoration: 'none' }}>\n                  <div className=\"row\">\n                      <div class=\"text\">\n                        Logistic Regression Model\n                      </div>\n                  </div>\n                  </a>\n              </div>\n              <div className=\"glass\">\n                  <a name=\"overview\">\n                      <div className=\"title\">\n                          Spotify API\n                      </div>\n                  </a>\n                  <div className=\"subtitle\">\n                      Overview\n                  </div>\n                  <div className=\"text\">\n                      I've been playing piano since the age of four, singing (perhaps out-of-tune) since the age of six, and\n                      listening to Spotify at least an hour a day since I first got a Premium account in college.\n                  </div>\n                  <div className=\"text\">\n                      I discovered the Spotify API after researching a little bit about Spotify Wrapped and decided I wanted\n                      to do more research about my personal listening habits!\n                  </div>\n                  <div className=\"text\">\n                      This page will dive into the projects that I was able to create using the API:\n                      <ul>\n                          <li>Did exploratory data analysis to find my favorite genres and artists</li>\n                          <li>Trained a linear regression model to predict whether I'd like a song</li>\n                      </ul>\n                  </div>\n                  <div className=\"text\">\n                  I used Jupyter Notebook, pandas, matplotlib, requests, seaborn, numpy, and scikit-learn for this project.\n                  </div>\n                  <a name=\"exploration\">\n                      <div className=\"spacer\" />\n                  </a>\n                  <div className=\"subtitle\">\n                      Exploration\n                  </div>\n                  <div className=\"text\">\n                      I first explored which genres I listened to the most by aggregating each genres' appearance in the list\n                      of genres corresponding to my top 20 artists.\n                  </div>\n                  <img className=\"image\" src={genres} />\n                  <div className=\"text\">\n                      I noticed that the API returns a feature called \"popularity\" for each artist, and have always been a little\n                      curious about whether the music I listen to is mainstream. To find out, I graphed the correlation between\n                      artist ranking and popularity:\n                  </div>\n                  <img className=\"image\" src={popularity} />\n                  <div className=\"text\">\n                      With an r-value of -0.44945735259442465, I'd say there is definitely a chance that this could be true. A\n                      negative r-value of this magnitude could imply that my more popular artists have higher popularity scores--\n                      a.k.a. a negative correlation between personal preference and artist popularity.\n                  </div>\n                  <a name=\"model\">\n                      <div className=\"spacer\" />\n                  </a>\n                  <div className=\"subtitle\">\n                      Logistic Regression Model\n                  </div>\n                  <div className=\"text\">\n                      I personally have had a variety of hit-and-misses with Spotify's recommendations algorithm. When I saw that\n                      the API could return certain features of song tracks, I wanted to see if I could build myself a personalized\n                      recommendations algorithm using these features and the information that I know about my personal preferences.\n                  </div>\n                  <div className=\"text\">\n                      The features for each track returned by the API include:\n                      <ul>\n                          <li>acousticness</li>\n                          <li>danceability</li>\n                          <li>energy</li>\n                          <li>instrumentalness</li>\n                          <li>key</li>\n                          <li>liveness</li>\n                          <li>loudness</li>\n                          <li>speechiness</li>\n                          <li>tempo</li>\n                          <li>time signature</li>\n                          <li>valence</li>\n                      </ul>\n                  </div>\n                  <div className=\"text\">\n                      Using the API, I pulled 552 songs from my own playlists and my friends' playlists and added a 0 (dislike)\n                      and 1 (like) label to each song. I cleaned the data and prepared it for training, including changes such as:\n                      <ul>\n                          <li>one-hot-encoding the \"key\" column</li>\n                          <li>filling null values</li>\n                          <li>removing time signature as a feature after realizing most values were missing or redundant (i.e.\n                              all 4's) or incorrect (i.e. 0)</li>\n                      </ul>\n                  </div>\n                  <div className=\"text\">\n                      Afterwards I did a 9:1 split of the data and trained a Logistic Regression model on the data using\n                      scikit-learn. With just these basic features, the model reached:\n                      <ul>\n                          <li>Training accuracy of 78.47%</li>\n                          <li>Validation accuracy of 71.43%</li>\n                      </ul>\n                  </div>\n                  <div className=\"text\">\n                      Plotting the ROC curve of the model reveals:\n                  </div>\n                  <img className=\"image\" src={rhizomeROC} />\n                  <div className=\"text\">\n                      I also wanted to test how well the model responds to new data, so I created a completely new playlist of\n                      40 songs I've never listened to before and had the model predict 0-1 labels of preference. I listened to the\n                      songs and manually labeled them, and then calculated the model's accuracy to be 65%.\n                  </div>\n                  <div className=\"text\">\n                      This wasn't as stastically significant as I wanted it to be (p=0.04). Some ideas I have moving forward in\n                      the next iteration of this model are to add:\n                      <ul>\n                          <li>Add genre as a feature</li>\n                          <li>Add artist name as a feature</li>\n                          <li>Add album name as a feature</li>\n                      </ul>\n                  </div>\n                  <div className=\"spacer\" />\n              </div>\n          </div>\n      </div>\n      */}\n      </div>\n  );\n}\n\nexport default Spotify;"]},"metadata":{},"sourceType":"module"}