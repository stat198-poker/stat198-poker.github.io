{"ast":null,"code":"import { getGlobalClassNames, HighContrastSelectorWhite, HighContrastSelectorBlack, HighContrastSelector } from '../../Styling';\nvar GlobalClassNames = {\n  root: 'ms-Link'\n};\nexport var getStyles = function (props) {\n  var _a, _b, _c, _d;\n\n  var className = props.className,\n      isButton = props.isButton,\n      isDisabled = props.isDisabled,\n      theme = props.theme;\n  var semanticColors = theme.semanticColors; // Tokens\n\n  var linkColor = semanticColors.link;\n  var linkInteractedColor = semanticColors.linkHovered;\n  var linkDisabledColor = semanticColors.disabledText;\n  var focusBorderColor = semanticColors.focusBorder;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  return {\n    root: [classNames.root, theme.fonts.medium, {\n      color: linkColor,\n      outline: 'none',\n      fontSize: 'inherit',\n      fontWeight: 'inherit',\n      textDecoration: 'none',\n      selectors: (_a = {\n        '.ms-Fabric--isFocusVisible &:focus': {\n          // Can't use getFocusStyle because it doesn't support wrapping links\n          // https://github.com/microsoft/fluentui/issues/4883#issuecomment-406743543\n          // Using box-shadow and outline allows the focus rect to wrap links that span multiple lines\n          // and helps the focus rect avoid getting clipped.\n          boxShadow: \"0 0 0 1px \" + focusBorderColor + \" inset\",\n          outline: \"1px auto \" + focusBorderColor,\n          selectors: (_b = {}, _b[HighContrastSelector] = {\n            outline: '1px solid WindowText'\n          }, _b)\n        }\n      }, _a[HighContrastSelector] = {\n        // For IE high contrast mode\n        borderBottom: 'none'\n      }, _a)\n    }, isButton && {\n      background: 'none',\n      backgroundColor: 'transparent',\n      border: 'none',\n      cursor: 'pointer',\n      display: 'inline',\n      margin: 0,\n      overflow: 'inherit',\n      padding: 0,\n      textAlign: 'left',\n      textOverflow: 'inherit',\n      userSelect: 'text',\n      borderBottom: '1px solid transparent',\n      selectors: (_c = {}, _c[HighContrastSelectorBlack] = {\n        color: '#FFFF00'\n      }, _c[HighContrastSelectorWhite] = {\n        color: '#00009F'\n      }, _c)\n    }, !isButton && {\n      selectors: (_d = {}, _d[HighContrastSelector] = {\n        // This is mainly for MessageBar, which sets MsHighContrastAdjust: none by default\n        MsHighContrastAdjust: 'auto'\n      }, _d)\n    }, isDisabled && ['is-disabled', {\n      color: linkDisabledColor,\n      cursor: 'default'\n    }, {\n      selectors: {\n        '&:link, &:visited': {\n          pointerEvents: 'none'\n        }\n      }\n    }], !isDisabled && {\n      selectors: {\n        '&:active, &:hover, &:active:hover': {\n          color: linkInteractedColor,\n          textDecoration: 'underline'\n        },\n        '&:focus': {\n          color: linkColor\n        }\n      }\n    }, classNames.root, className]\n  };\n};","map":{"version":3,"sources":["components/Link/Link.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  getGlobalClassNames,\n  HighContrastSelectorWhite,\n  HighContrastSelectorBlack,\n  HighContrastSelector,\n} from '../../Styling';\nimport { ILinkStyleProps, ILinkStyles } from './Link.types';\n\nconst GlobalClassNames = {\n  root: 'ms-Link',\n};\n\nexport const getStyles = (props: ILinkStyleProps): ILinkStyles => {\n  const { className, isButton, isDisabled, theme } = props;\n  const { semanticColors } = theme;\n\n  // Tokens\n  const linkColor = semanticColors.link;\n  const linkInteractedColor = semanticColors.linkHovered;\n  const linkDisabledColor = semanticColors.disabledText;\n  const focusBorderColor = semanticColors.focusBorder;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      {\n        color: linkColor,\n        outline: 'none',\n        fontSize: 'inherit',\n        fontWeight: 'inherit',\n        textDecoration: 'none',\n\n        selectors: {\n          '.ms-Fabric--isFocusVisible &:focus': {\n            // Can't use getFocusStyle because it doesn't support wrapping links\n            // https://github.com/microsoft/fluentui/issues/4883#issuecomment-406743543\n            // Using box-shadow and outline allows the focus rect to wrap links that span multiple lines\n            // and helps the focus rect avoid getting clipped.\n            boxShadow: `0 0 0 1px ${focusBorderColor} inset`,\n            outline: `1px auto ${focusBorderColor}`,\n            selectors: {\n              [HighContrastSelector]: {\n                outline: '1px solid WindowText',\n              },\n            },\n          },\n          [HighContrastSelector]: {\n            // For IE high contrast mode\n            borderBottom: 'none',\n          },\n        },\n      },\n      isButton && {\n        background: 'none',\n        backgroundColor: 'transparent',\n        border: 'none',\n        cursor: 'pointer',\n        display: 'inline',\n        margin: 0,\n        overflow: 'inherit',\n        padding: 0,\n        textAlign: 'left',\n        textOverflow: 'inherit',\n        userSelect: 'text',\n        borderBottom: '1px solid transparent', // For Firefox high contrast mode\n        selectors: {\n          [HighContrastSelectorBlack]: {\n            color: '#FFFF00',\n          },\n          [HighContrastSelectorWhite]: {\n            color: '#00009F',\n          },\n        },\n      },\n      !isButton && {\n        selectors: {\n          [HighContrastSelector]: {\n            // This is mainly for MessageBar, which sets MsHighContrastAdjust: none by default\n            MsHighContrastAdjust: 'auto',\n          },\n        },\n      },\n\n      isDisabled && [\n        'is-disabled',\n        {\n          color: linkDisabledColor,\n          cursor: 'default',\n        },\n        {\n          selectors: {\n            '&:link, &:visited': {\n              pointerEvents: 'none',\n            },\n          },\n        },\n      ],\n      !isDisabled && {\n        selectors: {\n          '&:active, &:hover, &:active:hover': {\n            color: linkInteractedColor,\n            textDecoration: 'underline',\n          },\n          '&:focus': {\n            color: linkColor,\n          },\n        },\n      },\n      classNames.root,\n      className,\n    ],\n  };\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}